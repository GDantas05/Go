package main

import "fmt"

func main() {
	x := 10
	fmt.Println(&x) //IMPRIME O ENDEREÇO DE MEMÓRIA PARA ONDE X ESTÁ APONTANDO
	y := &x         //RECEBE O MESMO ENDEREÇO DE MEMÓRIA PARA ONDE X ESTÁ APONTANDO
	fmt.Println(y)
	fmt.Println(*y) //IMPRIME O VALOR CONTIDO NO ENDEREÇO DE MEMÓRIA DA VARIÁVEL(MESMO VALOR DE X)
	*y = 20         //O VALOR CONTIDO NO ENDEREÇO DE MEMÓRIA APONTADO POR Y É ALTERADO(PONTEIRO)
	fmt.Println(x)  //O VALOR DE X PASSA A SER 20 POIS ELE APONTA PARA O MESMO ENDEREÇO DE MEMÓRIA QUE O Y, E COMO O VALOR CONTIDO NESSE ENDEREÇO FOI ALTERADO
	//NA LINHA ANTERIOR PELO PONTEIRO DE Y O X PASSA A TER ESSE VALOR TAMBÉM
	var z *int = &x //COMO O ENDEREÇAMENTO DE MEMÓRIA DE X É UMA STRING PARA GUARDÁ-LA EM UM INTEIRO COMO A VARIÁVEL Z PRECISO PASSAR O * ANTES DO TIPO(INT)
	fmt.Println(z)

	b := 10
	fmt.Println(xpto(&b))
	fmt.Println(b) //IMPRIME 100 POIS O VALOR DE ENDEREÇAMENTO FOI ALTERADO PELO PONTEIRO DE A NA FUNÇÃO XPTO
}

//COMO ELE RECEBE O ENDEREÇAMENTO DE MEMÓRIA PARA ONDE ESTÁ APONTADO B O PONTEIRO DE A FAZ O VALOR DESSE ENDEREÇAMENTO MUDAR
//FAZENDO COM QUE O VALOR DA VARIÁVEL B PASSE A SER 100 AO INVÉS DE 10
func xpto(a *int) int {
	*a = 100
	return *a
}
